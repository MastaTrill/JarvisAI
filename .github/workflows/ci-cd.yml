name: Jarvis CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade --upgrade-strategy eager -r requirements.txt
      - name: Run Bandit security scan
        run: |
          pip install bandit
          bandit -r .
      - name: Run tests
        run: |
          python -m pytest tests/ --maxfail=1 --disable-warnings
      - name: Lint Python code
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Run coverage
        run: |
          pip install coverage
          coverage run -m pytest tests/
          coverage report
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Build and push Docker image
        if: matrix.python-version == '3.10' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "MastaTriLL" --password-stdin
          docker build -t "MastaTriLL/jarvis-ai:latest" .
          docker push "MastaTriLL/jarvis-ai:latest"
      - name: Deploy to Kubernetes (Helm)
        if: matrix.python-version == '3.10' && github.ref == 'refs/heads/main' && github.event_name == 'push' && env.KUBECONFIG != ''
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          helm upgrade --install jarvis-ai ./helm --set image.repository="MastaTriLL/jarvis-ai" --set image.tag=latest
